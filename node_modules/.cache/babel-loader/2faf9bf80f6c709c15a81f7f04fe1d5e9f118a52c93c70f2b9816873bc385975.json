{"ast":null,"code":"/**\n * To learn more about HTML Serializer check out the Prismic documentation\n * https://prismic.io/docs/vuejs/beyond-the-api/html-serializer\n */\n\nimport prismicDOM from 'prismic-dom';\nimport linkResolver from './link-resolver';\nconst Elements = prismicDOM.RichText.Elements;\nexport default function (type, element, content, children) {\n  // Generate links to Prismic Documents as <router-link> components\n  // Present by default, it is recommended to keep this\n  if (type === Elements.hyperlink) {\n    let result = '';\n    const url = prismicDOM.Link.url(element.data, linkResolver);\n    if (element.data.link_type === 'Document') {\n      result = `<router-link to=\"${url}\">${content}</router-link>`;\n    } else {\n      const target = element.data.target ? `target=\"'${element.data.target}'\" rel=\"noopener\"` : '';\n      result = `<a href=\"${url}\" ${target}>${content}</a>`;\n    }\n    return result;\n  }\n\n  // If the image is also a link to a Prismic Document, it will return a <router-link> component\n  // Present by default, it is recommended to keep this\n  if (type === Elements.image) {\n    let result = `<img src=\"${element.url}\" alt=\"${element.alt || ''}\" copyright=\"${element.copyright || ''}\">`;\n    if (element.linkTo) {\n      const url = prismicDOM.Link.url(element.linkTo, linkResolver);\n      if (element.linkTo.link_type === 'Document') {\n        result = `<router-link to=\"${url}\">${result}</router-link>`;\n      } else {\n        const target = element.linkTo.target ? `target=\"${element.linkTo.target}\" rel=\"noopener\"` : '';\n        result = `<a href=\"${url}\" ${target}>${result}</a>`;\n      }\n    }\n    const wrapperClassList = [element.label || '', 'block-img'];\n    result = `<p class=\"${wrapperClassList.join(' ')}\">${result}</p>`;\n    return result;\n  }\n\n  // Return null to stick with the default behavior for everything else\n  return null;\n}","map":{"version":3,"names":["prismicDOM","linkResolver","Elements","RichText","type","element","content","children","hyperlink","result","url","Link","data","link_type","target","image","alt","copyright","linkTo","wrapperClassList","label","join"],"sources":["C:/Users/user/testwebsite/src/prismic/html-serializer.js"],"sourcesContent":["/**\n * To learn more about HTML Serializer check out the Prismic documentation\n * https://prismic.io/docs/vuejs/beyond-the-api/html-serializer\n */\n\nimport prismicDOM from 'prismic-dom'\nimport linkResolver from './link-resolver'\n\nconst Elements = prismicDOM.RichText.Elements\n\nexport default function (type, element, content, children) {\n  // Generate links to Prismic Documents as <router-link> components\n  // Present by default, it is recommended to keep this\n  if (type === Elements.hyperlink) {\n    let result = ''\n    const url = prismicDOM.Link.url(element.data, linkResolver)\n\n    if (element.data.link_type === 'Document') {\n      result = `<router-link to=\"${url}\">${content}</router-link>`\n    } else {\n      const target = element.data.target ? `target=\"'${element.data.target}'\" rel=\"noopener\"` : ''\n      result = `<a href=\"${url}\" ${target}>${content}</a>`\n    }\n    return result\n  }\n\n  // If the image is also a link to a Prismic Document, it will return a <router-link> component\n  // Present by default, it is recommended to keep this\n  if (type === Elements.image) {\n    let result = `<img src=\"${element.url}\" alt=\"${element.alt || ''}\" copyright=\"${element.copyright || ''}\">`\n\n    if (element.linkTo) {\n      const url = prismicDOM.Link.url(element.linkTo, linkResolver)\n\n      if (element.linkTo.link_type === 'Document') {\n        result = `<router-link to=\"${url}\">${result}</router-link>`\n      } else {\n        const target = element.linkTo.target ? `target=\"${element.linkTo.target}\" rel=\"noopener\"` : ''\n        result = `<a href=\"${url}\" ${target}>${result}</a>`\n      }\n    }\n    const wrapperClassList = [element.label || '', 'block-img']\n    result = `<p class=\"${wrapperClassList.join(' ')}\">${result}</p>`\n    return result\n  }\n\n  // Return null to stick with the default behavior for everything else\n  return null\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,OAAOA,UAAU,MAAM,aAAa;AACpC,OAAOC,YAAY,MAAM,iBAAiB;AAE1C,MAAMC,QAAQ,GAAGF,UAAU,CAACG,QAAQ,CAACD,QAAQ;AAE7C,eAAe,UAAUE,IAAI,EAAEC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACzD;EACA;EACA,IAAIH,IAAI,KAAKF,QAAQ,CAACM,SAAS,EAAE;IAC/B,IAAIC,MAAM,GAAG,EAAE;IACf,MAAMC,GAAG,GAAGV,UAAU,CAACW,IAAI,CAACD,GAAG,CAACL,OAAO,CAACO,IAAI,EAAEX,YAAY,CAAC;IAE3D,IAAII,OAAO,CAACO,IAAI,CAACC,SAAS,KAAK,UAAU,EAAE;MACzCJ,MAAM,GAAI,oBAAmBC,GAAI,KAAIJ,OAAQ,gBAAe;IAC9D,CAAC,MAAM;MACL,MAAMQ,MAAM,GAAGT,OAAO,CAACO,IAAI,CAACE,MAAM,GAAI,YAAWT,OAAO,CAACO,IAAI,CAACE,MAAO,mBAAkB,GAAG,EAAE;MAC5FL,MAAM,GAAI,YAAWC,GAAI,KAAII,MAAO,IAAGR,OAAQ,MAAK;IACtD;IACA,OAAOG,MAAM;EACf;;EAEA;EACA;EACA,IAAIL,IAAI,KAAKF,QAAQ,CAACa,KAAK,EAAE;IAC3B,IAAIN,MAAM,GAAI,aAAYJ,OAAO,CAACK,GAAI,UAASL,OAAO,CAACW,GAAG,IAAI,EAAG,gBAAeX,OAAO,CAACY,SAAS,IAAI,EAAG,IAAG;IAE3G,IAAIZ,OAAO,CAACa,MAAM,EAAE;MAClB,MAAMR,GAAG,GAAGV,UAAU,CAACW,IAAI,CAACD,GAAG,CAACL,OAAO,CAACa,MAAM,EAAEjB,YAAY,CAAC;MAE7D,IAAII,OAAO,CAACa,MAAM,CAACL,SAAS,KAAK,UAAU,EAAE;QAC3CJ,MAAM,GAAI,oBAAmBC,GAAI,KAAID,MAAO,gBAAe;MAC7D,CAAC,MAAM;QACL,MAAMK,MAAM,GAAGT,OAAO,CAACa,MAAM,CAACJ,MAAM,GAAI,WAAUT,OAAO,CAACa,MAAM,CAACJ,MAAO,kBAAiB,GAAG,EAAE;QAC9FL,MAAM,GAAI,YAAWC,GAAI,KAAII,MAAO,IAAGL,MAAO,MAAK;MACrD;IACF;IACA,MAAMU,gBAAgB,GAAG,CAACd,OAAO,CAACe,KAAK,IAAI,EAAE,EAAE,WAAW,CAAC;IAC3DX,MAAM,GAAI,aAAYU,gBAAgB,CAACE,IAAI,CAAC,GAAG,CAAE,KAAIZ,MAAO,MAAK;IACjE,OAAOA,MAAM;EACf;;EAEA;EACA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}